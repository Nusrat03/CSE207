#include <stdio.h>
#include <stdlib.h>

struct node {
    int num;
    struct node * preptr;
    struct node * nextptr;
}*start_node, *end_node;
 
 
void create_doublylinked_list(int n)
{
    int i, num;
    struct node *front_node;
 
    if(n >= 1)
    {
        start_node = (struct node *)malloc(sizeof(struct node));
        if(start_node != NULL)
        {
            printf(" Input data for node 1 : "); 
            scanf("%d", &num);
            start_node->num = num;
            start_node->preptr = NULL;
            start_node->nextptr = NULL;
            end_node = start_node;
            i=2;
            while(i<=n)
            {
                front_node = (struct node *)malloc(sizeof(struct node));
                if(front_node != NULL)
                {
                    printf(" Input data for node %d : ", i);
                    scanf("%d", &num);
                    front_node->num = num;
                    front_node->preptr = end_node;    
                    front_node->nextptr = NULL;     
                    end_node->nextptr = front_node;   
                    end_node = front_node;            
                }
                else
                {
                    printf("Sorry! can't allocate the memory.");
                    break;
                }
                i++;
            }
        }
        else
        {
            printf("Sorry! can't allocate the memory");
        }
    }
}

void delete_lastnode_doublylinked_list()
{
    struct node * delete_node;
 
    if(end_node == NULL)
    {
        printf("Nothing to delete\n");
    }
    else
    {
        delete_node = end_node;
        end_node = end_node->preptr;    
        end_node->nextptr = NULL;     
        free(delete_node);           
    }
}

void display_doublylinked_list(int m)
{
    struct node * temp;
    int n = 1;
    if(start_node == NULL)
    {
        printf(" No data found in the List yet.");
    }
    else
    {
        temp = start_node;
        if (m==1)
        {
        printf("\n Data entered in the list are :\n");
        }
        else
        {
         printf("\n After deletion the new list are :\n");   
        }
        while(temp != NULL)
        {
            printf(" node %d : %d\n", n, temp->num);
            n++;
            temp = temp->nextptr; 
        }
    }
}
int main()
{
    int n,num1,a,insPlc;
    start_node = NULL;
    end_node = NULL;
    printf(" Input the number of nodes (3 or more ): ");
    scanf("%d", &n);
    create_doublylinked_list(n); 
    a=1;
    display_doublylinked_list(a);
    delete_lastnode_doublylinked_list();
        a=2;
    display_doublylinked_list(a);
    return 0;
}
