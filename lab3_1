#include<stdio.h>
#include<stdlib.h>

struct node{
  int num;
  struct node *preptr;
  struct node *nextptr;
}*start_node , *end_node;

void create_doublylinked_list(int n)
{
  int i, num;
  struct node *front_node;
  if(n >= 1)
  {
    start_node= (struct node*) malloc(sizeof(struct node));
    if(start_node != NULL)
    {
      scanf("%d",&num);
      start_node -> num = num;
      start_node -> preptr = NULL;
      start_node -> nextptr = NULL;
      end_node = start_node;
      i=0;
      while(i<=n)
      {
        front_node = (struct node*)malloc(sizeof(struct node));
        if(front_node != NULL)
        {
          scanf("%d",&num);
          front_node -> num = num;
          front_node -> preptr = end_node;
          front_node -> nextptr = NULL;
          end_node -> nextptr = front_node;
          end_node = front_node;
        }
        else
        {
          printf("Sorry ! can't allocate the memory");
          break;
        }
        i++;
      }
    }
    else
    {
      printf("Sorry ! can't allocate the memory");
    }
  }
}

void display_doublylinked_list()
{
  struct node *temp;
  int n=1;
  if(start_node == NULL )
  {
    printf("Nothing !");
  }
  else 
  {
    temp = start_node;
    while ( temp != NULL)
    {
      printf(" node %d : %d \n",n, temp->num);
      n++;
      temp = temp->nextptr;
    }
  }
}

int main()
{
  int n;
  start_node = NULL;
  end_node = NULL;
  printf("enter the nodes : \n");
  scanf("%d",&n);
  create_doublylinked_list(n);
  display_doublylinked_list();
  return 0;
}
