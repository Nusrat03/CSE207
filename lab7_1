#include<stdio.h>
#include<stdlib.h>

typedef struct Node
{
    int data;
    struct Node *right; 
    struct Node *left;
}Node;

Node *constructBinarySearchTree(int preorderArray[], int key, int min, int max, int arraySize, int *index)
    {
    if (*index > arraySize){
        return NULL;
    }

    Node *root = NULL;

    if (key > min && key < max){

        root = (Node *)malloc(sizeof(Node));
        root->data = key;
        root->right = root->left = NULL;
        *index = *index+1;

        if (*index < arraySize){

            root->left = constructBinarySearchTree(preorderArray, preorderArray[*index], min, key, arraySize, index);
            root->right = constructBinarySearchTree(preorderArray, preorderArray[*index], key, max, arraySize, index);
        }
    }
    return root;
}

void inOrder(Node *root){
    
    if(root->left != NULL){

        inOrder(root->left);
    }

    printf("%d ", root->data);

    if(root->right != NULL){

        inOrder(root->right);
    }
}

void main(){

    int preorderArray[100], size, index = 0;

    printf("Enter the size : ");
    scanf("%d", &size);
    printf("Enter the array: ");

    for (int i = 0; i < size; i++){

        scanf("%d", &preorderArray[i]);
    }
    Node *root = constructBinarySearchTree(preorderArray, preorderArray[index], INT_MIN, INT_MAX, size, &index);
    inOrder(root);
}
